Summary:
This module implements an Intermediate Representation (IR) for physics laws and definitions using category theory concepts:

Physical variables → category objects

Operators/laws → morphisms

Relationships → functors

The IR enables symbolic transformation, visualization, and future proofing for back-end targets (e.g., simulators or theorem provers).

Design Rationale:
Category-theoretic IR abstracts domain knowledge into composable primitives.

Enforces a dual-level model: domain (physical variables) vs operations (laws).

Features:
CategoricalIR: stores objects (quantities), morphisms (laws), and functors (mappings).

IRCompiler: traverses AST and builds morphisms like define_law, boundary_condition, symmetry_law.
