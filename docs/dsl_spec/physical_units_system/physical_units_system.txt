Summary:
This module introduces dimensional analysis into the language via the Unit class and a dictionary of canonical units (UNITS). It defines unit multiplication, division, exponentiation, and compatibility checks, enabling physical correctness enforcement (e.g., disallowing length + time).

Design Rationale:
In physics-based DSLs, ensuring that expressions are dimensionally consistent is critical. This module lays the foundation for unit-aware parsing and checking, allowing semantic errors to be caught during compilation.

Functionality:
Unit: Stores a dictionary mapping dimension names to integer exponents.

Arithmetic methods: Allow unit expressions to combine (e.g. Newtons = kg·m/s²).

UNITS: Predefined set including meters, seconds, kilograms, joules, etc.
